name: Deploy Package - Sandbox

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Please select target sandbox
        type: choice
        options:
          - bartosz
          - cezary
          - kamil

jobs:
  Deploy-To-Bartosz-Sandbox:
    if: ${{ inputs.target }} == 'bartosz'
    runs-on: ubuntu-latest
    environment: BAR
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{github.ref}}
          fetch-depth: 0
      - name: Install Salesforce CLI
        run: >
          wget
          https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz

          mkdir ~/sfdx

          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1

          echo "$HOME/sfdx/bin" >> $GITHUB_PATH

          ~/sfdx/bin/sfdx version
      - name: Setup server key
        run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
      - name: JWT Authentication to target Org
        run: sf org login jwt --client-id ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ vars.SALESFORCE_USERNAME }} --set-default-dev-hub -a targetOrg --instance-url ${{ vars.INSTANCE_URL }}
      - name: Deploy Code without running tests
        run: sf project deploy start -x manifest/package.xml --pre-destructive-changes manifest/destructiveChangesPre.xml --post-destructive-changes manifest/destructiveChangesPost.xml -l NoTestRun -w 1000 --verbose --json --target-org targetOrg -g -c

  Deploy-To-Cezary-Sandbox:
    if: ${{ inputs.target }} == 'cezary'
    runs-on: ubuntu-latest
    environment: CEZ
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{github.ref}}
          fetch-depth: 0
      - name: Install Salesforce CLI
        run: >
          wget
          https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz

          mkdir ~/sfdx

          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1

          echo "$HOME/sfdx/bin" >> $GITHUB_PATH

          ~/sfdx/bin/sfdx version
      - name: Setup server key
        run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
      - name: JWT Authentication to target Org
        run: sf org login jwt --client-id ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ vars.SALESFORCE_USERNAME }} --set-default-dev-hub -a targetOrg --instance-url ${{ vars.INSTANCE_URL }}
      - name: Deploy Code without running tests
        run: sf project deploy start -x manifest/package.xml --pre-destructive-changes manifest/destructiveChangesPre.xml --post-destructive-changes manifest/destructiveChangesPost.xml -l NoTestRun -w 1000 --verbose --json --target-org targetOrg -g -c


  Deploy-To-Kamil-Sandbox:
    if: ${{ inputs.target }} == 'kamil'
    runs-on: ubuntu-latest
    environment: KAM
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{github.ref}}
          fetch-depth: 0
      - name: Install Salesforce CLI
        run: >
          wget
          https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz

          mkdir ~/sfdx

          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1

          echo "$HOME/sfdx/bin" >> $GITHUB_PATH

          ~/sfdx/bin/sfdx version
      - name: Setup server key
        run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
      - name: JWT Authentication to target Org
        run: sf org login jwt --client-id ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ vars.SALESFORCE_USERNAME }} --set-default-dev-hub -a targetOrg --instance-url ${{ vars.INSTANCE_URL }}
      - name: Deploy Code without running tests
        run: sf project deploy start -x manifest/package.xml --pre-destructive-changes manifest/destructiveChangesPre.xml --post-destructive-changes manifest/destructiveChangesPost.xml -l NoTestRun -w 1000 --verbose --json --target-org targetOrg -g -c
